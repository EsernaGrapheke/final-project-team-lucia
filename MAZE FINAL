def check(matriz, ycoordinate, xcoordinate):
    
    if matriz[xcoordinate][ycoordinate - 1] == 'S' or \
            matriz[xcoordinate - 1][ycoordinate] == 'S' or \
            matriz[xcoordinate][ycoordinate + 1] == 'S' or \
            matriz[xcoordinate + 1][ycoordinate] == 'S':
        return True
    else:
        return False

maze = [['x','x', 'x', 'x', 'x', 'x', 'x', 'x'], ['x','x', 'x', 'x', ' ', ' ',' ', 'x'], ['x','x', 'x', 'x', ' ', 'x',' ', 'x'], ['x','x', 'x', 'x', ' ', 'x',' ', 'x'], ['x','x', 'x', 'x', ' ', 'x',' ', 'x'], ['x','E', ' ', ' ', ' ', 'x','S', 'x'], ['x','x', 'x', 'x', 'x', 'x','x', 'x']]
print (maze[0][0], maze[0][1], maze[0][2], maze[0][3], maze[0][4], maze[0][5], maze[0][6], maze[0][7])
print (maze[1][0], maze[1][1], maze[1][2], maze[1][3], maze[1][4], maze[1][5], maze[1][6], maze[1][7])
print (maze[2][0], maze[2][1], maze[2][2], maze[2][3], maze[2][4], maze[2][5], maze[2][6], maze[2][7])
print (maze[3][0], maze[3][1], maze[3][2], maze[3][3], maze[3][4], maze[3][5], maze[3][6], maze[3][7])
print (maze[4][0], maze[4][1], maze[4][2], maze[4][3], maze[4][4], maze[4][5], maze[4][6], maze[4][7])
print (maze[5][0], maze[5][1], maze[5][2], maze[5][3], maze[5][4], maze[5][5], maze[5][6], maze[5][7])
print (maze[6][0], maze[6][1], maze[6][2], maze[6][3], maze[6][4], maze[6][5], maze[6][6], maze[6][7])
            

PathLeft = False
PathRight = False
PathUp = False
PathDown = False

numberOfpaths = 0

row= 0
while row < len(maze):
    column = 0
    while column < len(maze[0]):
        if maze[row][column] == 'E':
            entrancerow = row
            entrancecolumn = column
        column += 1
    row += 1

currentlocationx = entrancecolumn 
currentlocationy = entrancerow


while check (maze, currentlocationx, currentlocationy) is False:
    if maze[currentlocationy][currentlocationx -1] == " ":
        PathLeft = True
        numberOfpaths += 1
    if maze[currentlocationy][currentlocationx +1] == " ":
        PathRight = True
        numberOfpaths += 1
    if maze[currentlocationy-1][currentlocationx] == " ":
        PathUp = True
        numberOfpaths += 1
    if maze[currentlocationy+1][currentlocationx] == " ":
        PathDown = True
        numberOfpaths += 1
    if PathLeft is True:
        maze[currentlocationy][currentlocationx-1] = "路"
        currentlocationx -=1
    if PathRight is True:
        maze[currentlocationy][currentlocationx+1] = "路"
        currentlocationx +=1
    if PathUp is True:
        maze[currentlocationy-1][currentlocationx] = "路"
        currentlocationy -=1
    if PathDown is True:
        maze[currentlocationy+1][currentlocationx] = "路"
        currentlocationy +=1
    
   

if check(maze, currentlocationx, currentlocationy) is True:
    print ("you have arrived at the finish line")
    print ("It took", numberOfpaths, "steps to reach the exit.")
